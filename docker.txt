Docker Commands

# docker login with username
docker login --username=rajacsp
Ref:
https://stackoverflow.com/questions/34434231/how-to-specify-username-and-password-upon-docker-push


docker â€”version

docker info

## List Docker images

docker image ls

docker container ls -all

## List Docker containers (running, all, all in quiet mode)
docker container ls
docker container ls --all
docker container ls -aq

# Stop the container
docker stop orb



docker ps -a
docker images

# remove docker container
docker rm abcd

# remove docker image
docker rmi abcd

# docker run with detached
docker run -d abcd

# restart if exists
docker run --restart=always redis

# docker commit
docker commit --change "ENV DEBUG true" c3f279d17e0a  svendowideit/testimage:version3

# run the static site
docker run -d -P seqvence/static-site

# verify the running site
http://localhost:32769/

Ref:
https://www.youtube.com/watch?v=lNkVxDSRo7M

# Start the existing container
docker start 

# docker run Ubuntu
docker run -it --name ubuntu ubuntu:xenial bash


# start existing ubuntu
docker start ubuntu

# get into bash
docker exec -it ubuntu bash


# Install OracleDB
docker run -d -it --name ortest store/oracle/database-enterprise:12.2.0.1

docker exec -it ortest bash -c "source /home/oracle/.bashrc; sqlplus /nolog"

More:
https://hub.docker.com/u/rajacsp/content/sub-19df1a00-1ae1-4229-8fb6-96dc2b4703bf


# Connect from outside container:
docker run -d -it --name ortest -P store/oracle/database-enterprise:12.2.0.1

# Check Oracle logs in docker
docker logs ortest

# Start DB as DBA
 docker exec -it ortest bash -c "source /home/oracle/.bashrc; sqlplus / as sysdba"


# dockering Flask
https://runnable.com/docker/python/dockerize-your-flask-application

# Build docker
docker build -t my_docker_flask:latest .

# run the docker flask image
docker run -d -p 4000:5000 rajacsp/flaskmath:2

# Docker basic app
https://docs.docker.com/get-started/

how to save a docker container as an image?
https://docs.docker.com/engine/reference/commandline/commit/#commit-a-container-with-new-cmd-and-expose-instructions

# run the public docker
docker run -p 4000:80 rajacsp/flaskcsp:p2

# Public docker:
https://hub.docker.com/r/jcdemo/flaskapp/dockerfile

# Clear docker
docker system prune -a

# Clear docker volumes
docker system prune -a --volumes

# To stop all the running containers
docker stop $(docker ps -q) 

# Kube pod details
kubectl get po

kubectl logs bapi-be-6db7bf6f95-bshhk

# Container life cycle
https://medium.com/@nagarwal/lifecycle-of-docker-container-d2da9f85959

# Docker copy
docker ps

docker cp foo.txt 72ca2488b353:/foo.txt

docker cp 72ca2488b353:/foo.txt foo.txt

https://www.shellhacks.com/docker-cp-command-copy-file-to-from-container/

Docker commit and push
docker pull ubuntu
docker run --name csp-lamp-server -it ubuntu:latest bash
apt-get update
apt-get install lamp-server^
docker commit -m "Added LAMP Server" -a "NAME" csp-lamp-server USER/test-lamp-server:latest
docker login
docker push rajacsp/csp-lamp-server
https://www.techrepublic.com/article/how-to-create-a-docker-image-and-push-it-to-docker-hub/


Create simple Flask Image:
http://containertutorials.com/docker-compose/flask-simple-app.html

Docker run vs exec:
https://medium.com/the-code-review/docker-run-vs-exec-deep-dive-into-their-differences-19a1041735a3

Docker logs:
Docker logs 



docker run -d -it --name myflask -p 5002:5000 rajacsp/my_docker_flask:latest

docker image inspect:
docker image inspect 
docker image inspect 5158108894a9
https://docs.docker.com/engine/reference/commandline/image_inspect/


Find ip of a docker container:
docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container_name_or_id
https://stackoverflow.com/questions/17157721/how-to-get-a-docker-containers-ip-address-from-the-host
-----------------------------------------------------------------------
Docker fresh build and deploy:

cd /Users/str-kwml0011/projects/docker-flask-reverse-string

docker build -t flask-reverse-string:latest .

# check your docker image
docker images

# check container
docker ps

# Run it
docker run -d -p 5000:5000 flask-reverse-string:latest

# Test
curl http://127.0.0.1:5000/

# tagging
docker tag flask-reverse-string rajacsp/flask-reverse-string

# Docker pruning
docker container prune
	https://docs.docker.com/config/pruning/


Test:
http://127.0.0.1:5000/reverse?name=Raja
-----------------------------------------------------------------------

Postgres:

https://hub.docker.com/_/postgres?tab=tags

docker run -d -it --name pg11 postgres:11
docker run --name pg11 -e POSTGRES_PASSWORD=root -d -p 5432:5432 postgres:11

docker exec -it pg11 bash

psql -U postgres

0.0.0.0

psql -h 0.0.0.0 -p 5432 -U postgres

CREATE ROLE raja WITH LOGIN PASSWORD 'raja';
ALTER ROLE raja CREATEDB;
CREATE DATABASE raja;
GRANT ALL PRIVILEGES ON DATABASE raja TO raja;
\connect raja
ALTER ROLE raja lOGIN;  


CREATE DATABASE dbtest;
GRANT ALL PRIVILEGES ON DATABASE dbtest TO postgres;

CREATE DATABASE kapi;
GRANT ALL PRIVILEGES ON DATABASE kapi TO postgres;

ALTER DATABASE kapi RENAME TO kapi_backup;

# change password
ALTER USER postgres WITH PASSWORD 'postgres';

docker exec -it pg11 psql -U raja

CREATE TABLE one (
 name INT 
);

INSERT INTO one (name) VALUES ("one");

INSERT INTO one VALUES ("one");

TRUNCATE TABLE "KA_TRASH_METER" RESTART IDENTITY;

sudo docker run --rm -P -p 127.0.0.1:5432:5432 -e POSTGRES_PASSWORD="1234" --name pg postgres:alpine

# view dbs
\l

#
connct to db
\connect dbname
\c dbname

#
view tabels
\dt

#
change password




-----------------------------------------------------------------------

docker run --name pg11 -e POSTGRES_PASSWORD=root -d -p 5432:5432 postgres
docker exec -it pg11 bash

psql -h 0.0.0.0 -p 5432 -U postgres

psql -h 165.225.36.90 -p 5432 -U postgres
psql -h 120.0.0.1 -p 5432 -U postgres
psql -h localhost -p 5432 -U postgres

172.17.0.3
psql -h 172.17.0.3 -p 5432 -U postgres

psql postgresql://postgres:root@localhost:5432/postgres

Connecting postgres:
https://stackoverflow.com/questions/37694987/connecting-to-postgresql-in-a-docker-container-from-outside


psql -h localhost  -U bob

Posgres issues:
https://github.com/docker-library/postgres/issues/41


Feature: ValueType:
Time
TimePair
Value Pair
XML
Year
Year Pair

Feature Value:
value, name, sorting
domain, 2nd domain

Value list (String)
global.properties
value-list-string = Value list (String)


Java synthetic class:
https://javapapers.com/core-java/java-synthetic-class-method-field/


Events:
ID

Simple product:
https://cms-dev.kwikee.com/Kwikee/product/3841108
GTIN: 00013000002691
ID: 3841108



# Find OS info in Docker
uname -a

sample:
Linux d95c0096bc3b 4.9.125-linuxkit #1 SMP Fri Sep 7 08:20:28 UTC 2018 x86_64 GNU/Linux

Distribution Engine:
https://github.com/KwikeeLabs/distribution-engine



--------
Docker Distribution Engine Installation:

Steps to Setup the Distribution Engine on your VM:

Login to the VM
Install Docker: https://docs.docker.com/engine/installation/linux/ubuntulinux/ a. Refer to the Prerequisites, Install and Optional Configurations: Configure Docker to Start on Boot sections of the documentation b. Follow the associated Ubuntu version sections of the documentation c. To verify which version of Ubuntu being used, enter this command in the prompt: lsb_release -a
Install Docker Compose: https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-14-04 a. Refer to "Step 2 - Installing Docker Compose"
Go to your personal project directory i.e. /home/(username)/project
Copy the kwikee.zip package to this directory
sudo apt-get install unzip
Unzip the package
Go inside the kwikee folder
sudo docker-compose up -d postgres rabbitmq
sudo apt-get install postgresql-client-common postgresql-client
psql -U kwikee -W -d kwikee -h localhost < kwikee.sql
Enter password for kwikee user: kwikee
sudo docker-compose up -d api worker
sudo docker-compose exec worker python manage.py init_db
sudo docker-compose up -d nginx
--------/


-----------------
Influx DB:

https://hub.docker.com/_/influxdb

docker run --name=influxdb -d -p 8086:8086 influxdb

docker exec -it influxdb influx

Getting started with InfluxDB
https://docs.influxdata.com/influxdb/v1.7/introduction/getting-started/

https://www.influxdata.com/blog/getting-started-python-influxdb/

https://coderwall.com/p/fg18jq/getting-started-influxdb-grafana-docker

https://influxdb-python.readthedocs.io/en/latest/examples.html
-----------------/
